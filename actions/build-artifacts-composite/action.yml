name: tool1 composite build

description: 'Tool 1 composite'

inputs:
  workflow-inputs:
    description: 'All the onputs'
    type: string
    required: true
  slsa-outputs-file:
    description: 'A path to store the list of artifacts and their digest set'
    type: string
    required: true

outputs:
  some-output:
    description: "some output"
    value: ${{ steps.generate-outputs.outputs.some-output }}
  other-output:
    description: "other output"
    value: ${{ steps.generate-outputs.outputs.other-output }}

runs:
  using: 'composite'
  steps:
    - name: 'test'
      shell: bash
      env:
        GHA_PATH: ${{ github.action_path }}
      run: |
        echo "GITHUB_ACTION_PATH: $GITHUB_ACTION_PATH"
        echo "GHA_PATH: $GHA_PATH"
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        ls "$GITHUB_WORKSPACE"
        ls
        pwd
        tree
        echo "git status:"
        git status --short
        echo "inputs: ${{ toJson(inputs.workflow-inputs) }}"
        echo "inputs.name1: ${{ fromJson(inputs.workflow-inputs).name1 }}"
        echo "inputs.name2: ${{ fromJson(inputs.workflow-inputs).name2 }}"

    # This would call the main Action.
    - name: Run main action
      uses: ./../__TOOL_CHECKOUT_DIR__

    - name: Set up Go
      uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v2.2.0
      with:
        go-version: 1.19 # argument to the Action.
        check-latest: true


    # Disabled to speed up testing.
    # - name: run goreleaser
    #   uses: goreleaser/goreleaser-action@v3
    #   with:
    #     args: release --rm-dist

      #uses: ./../__TOOL_CHECKOUT_DIR__

    - name: after goreleaser
      shell: bash
      run: echo done!

    - name: "run"
      id: generate-outputs
      env:
        SLSA_OUTPUTS_ARTIFACTS_FILE: ${{ inputs.slsa-outputs-file }}
      shell: bash
      run: |
        echo 
        echo "SLSA_OUTPUTS_ARTIFACTS_FILE: $SLSA_OUTPUTS_ARTIFACTS_FILE"
        echo "SLSA_SECRETS: $SLSA_SECRETS"
        echo "SLSA_TOOL_INPUTS: $SLSA_TOOL_INPUTS"
        cat <<EOF >DATA
        {
          "version": 1,
          "attestation1.intoto":[
            { "name": "artifact11",
              "digest": { "sha256": "ad91970864102a59765e20ce16216efc9d6ad381471f7accceceab7d905703ef" }},
            { "name": "artifact12",
              "digest": { "sha256": "d4d5899a3868fbb6ae1856c3e55a32ce35913de3956d1973caccd37bd0174fa2" }}
          ],
          "attestation2.intoto":[
            { "name": "artifact21",
              "digest": { "sha256": "0ded0808c4d85f2ee0db86980ae610cc9d165e9ca9da466196cc73c346513713" }},
            { "name": "artifact22",
              "digest": { "sha256": "e363cc5b4e500bfc727106434a2578b38440aa18e105d57576f3d8f2abebf888" }}
          ]
        }
        EOF
        #TODO: output in file and base64 -w0
        echo "some-output=tool-defined-some-output" >> "$GITHUB_OUTPUT"
        echo "other-output=tool-defined-other-output" >> "$GITHUB_OUTPUT"

        # Expected file with pre-defined output
        cat DATA > "$SLSA_OUTPUTS_ARTIFACTS_FILE"