name: tool1 composite build

description: 'Tool 1 composite'

inputs:
  # BYOB-provided inputs
  slsa-workflow-inputs:
    # Inputs in JSON format.
    description: 'All the onputs'
    type: string
    required: true
  # Secrets in JSON format.
  slsa-workflow-secrets:
    description: 'All the secrets'
    type: string
    required: true
  slsa-layout-file:
    description: 'Location to store the layout content'
    type: string
    required: true

outputs:
  # Outputs frm the inner GitHub Action call.
  some-output:
    description: "some output"
    value: ${{ steps.generate-outputs.outputs.some-output }}
  other-output:
    description: "other output"
    value: ${{ steps.generate-outputs.outputs.other-output }}

runs:
  using: 'composite'
  steps:
    - name: 'test'
      shell: bash
      env:
        GHA_PATH: ${{ github.action_path }}
        ALL_INPUTS: ${{ toJson(inputs.slsa-workflow-inputs) }}
        INPUT_NAME1: ${{ fromJson(inputs.slsa-workflow-inputs).name1 }}
        INPUT_NAME2: ${{ fromJson(inputs.slsa-workflow-inputs).name2 }}
        SECRET1: ${{ fromJson(inputs.slsa-workflow-secrets).secret1 }}
        SECRET2: ${{ fromJson(inputs.slsa-workflow-secrets).secret2 }}
      run: |
        echo "GITHUB_ACTION_PATH: $GITHUB_ACTION_PATH"
        echo "GHA_PATH: $GHA_PATH"
        echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
        ls "$GITHUB_WORKSPACE"
        ls
        pwd
        tree
        echo "git status:"
        git status --short
        echo "inputs: $ALL_INPUTS"
        echo "inputs.name1: $INPUT_NAME1"
        echo "inputs.name2: $INPUT_NAME2"
        echo "SECRET1: $(echo $SECRET1 | base64 | base64)"
        echo "SECRET2: $(echo $SECRET2 | base64 | base64)"
    - name: Set up Go
      uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v2.2.0
      with:
        go-version: 1.19 # argument to the Action.
        check-latest: true

    # This would call the main Action, e.g., ./../__TOOL_CHECKOUT_DIR__/<path/to/action>
    # if path is left empty, the Action's action.yml is located at the root of the repository.
    - name: Run main action
      uses: ./../__TOOL_CHECKOUT_DIR__
      with:
        name1: ${{ fromJson(inputs.slsa-workflow-inputs).name1 }}
        name2: ${{ fromJson(inputs.slsa-workflow-inputs).name2 }}
        secret1: ${{ fromJson(inputs.slsa-workflow-secrets).secret1 }}
        secret2: ${{ fromJson(inputs.slsa-workflow-secrets).secret2 }}

    # Disabled to speed up testing.
    # - name: run goreleaser
    #   uses: goreleaser/goreleaser-action@v3
    #   with:
    #     args: release --rm-dist

      #uses: ./../__TOOL_CHECKOUT_DIR__

    - name: after goreleaser
      shell: bash
      run: |
        echo done!
        echo "hello, world" > result.txt

    - name: Upload result
      id: upload
      uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3.1.1
      with:
        name: "result.txt"
        path: "result.txt"

    - name: "run"
      id: generate-outputs
      env:
        SLSA_OUTPUTS_ARTIFACTS_FILE: ${{ inputs.slsa-layout-file }}
      shell: bash
      run: |
        hash=$(sha256sum result.txt | awk '{print $1}')
        echo 
        echo "SLSA_OUTPUTS_ARTIFACTS_FILE: $SLSA_OUTPUTS_ARTIFACTS_FILE"
        echo "SLSA_SECRETS: $SLSA_SECRETS"
        echo "SLSA_TOOL_INPUTS: $SLSA_TOOL_INPUTS"
        cat <<EOF >DATA
        {
          "version": 1,
          "attestation1.intoto":[
            { "name": "result.txt",
              "digest": { "sha256": "$hash" }},
            { "name": "artifact12",
              "digest": { "sha256": "d4d5899a3868fbb6ae1856c3e55a32ce35913de3956d1973caccd37bd0174fa2" }}
          ],
          "attestation2.intoto":[
            { "name": "artifact21",
              "digest": { "sha256": "0ded0808c4d85f2ee0db86980ae610cc9d165e9ca9da466196cc73c346513713" }},
            { "name": "artifact22",
              "digest": { "sha256": "e363cc5b4e500bfc727106434a2578b38440aa18e105d57576f3d8f2abebf888" }}
          ]
        }
        EOF
        #TODO: output in file and base64 -w0

        # NOTE: we relay the output from the inner Action.
        echo "some-output=tool-defined-some-output" >> "$GITHUB_OUTPUT"
        echo "other-output=tool-defined-other-output" >> "$GITHUB_OUTPUT"

        # Expected file with pre-defined output
        cat DATA > "$SLSA_OUTPUTS_ARTIFACTS_FILE"